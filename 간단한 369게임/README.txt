간단한 369 문제 풀이.

C언어로 해결시 접근.
    -수학적인 접근.
          - 3, 6, 9로 나누어 떨어지는것은 아님.
        - 모듈로 연산을 통한 계산.
        ->일의 자리수는 n % 3 == 0
        ->10의 자리수는 1n % 3 == 1
        ->20의 자리수는 2n % 3 == 2
        십의 자리수로만 갯수가 많아지고, 백의 자리수는 더 많아짐. 더 효율적인 방식이 필요.

    -문제가 되는 부분을 모두 배열에 넣어놓고 그 안에 있는 것들을 바로바로 대체해버림.
        - 존나 오래걸리고 귀찮음.(이렇게하면 풀리긴 할듯.)

    -자릿수적인 접근(?) -> 채택
        - 일의 자리면 3, 6, 9만 확인하면 됨. 십의 자릿수가 존재하면 십의 자릿수가 3, 6, 9인지를 확인함. 백의 자릿수면 십의 자릿수와 일의 자릿수를 모두 확인하면 됨.
        - 각 자릿수별 함수를 만듦.

Java의 Substring과 integer 변환으로 바로바로 비교할 수 있음.

채택된걸로 진행.
if - else문으로 진행하다보니, 굉장히 복잡해짐.
입력값이 10이상 1000이하 라는 조건이였기에 가능했음. (입력 자릿수가 커질수록 복잡도가 엄청나게 늘어남.)

1트 실패.
다중 if문을 사용하다보니, qor함수에서 백의 자릿수와 일의 자릿수가 같은 경우의 수를 생각치 못함. -> 디버깅의 필요성.

2트 실패.
qor 함수에서 dlf, tlq을 둘다 호출한 것이 문제였음.
tlq함수가 이미 dlf함수를 내포하고있었기에 실패함.